
// Icons for map
var lrgIcon = L.icon({
  iconUrl: '<%= image_path "map-icon-hot.png" %>',
  iconSize: [40,53]
});

var medIcon = L.icon({
  iconUrl: '<%= image_path "map-icon-warm.png" %>',
  iconSize: [30,39.75]
});

var smlIcon = L.icon({
  iconUrl: '<%= image_path "map-icon-cool.png" %>',
  iconSize: [20,26.5]
});

var ready;
var currentCity = '';

ready = function () {

  // Instantiate map
  var map = L.map('map', {
    zoomControl: false,
  });

  // Add attribution
  L.tileLayer('http://openmapsurfer.uni-hd.de/tiles/roads/x={x}&y={y}&z={z}', {
    attribution: 'Imagery from <a href="http://giscience.uni-hd.de/">GIScience Research Group @ University of Heidelberg</a> &mdash; Map data <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}).addTo(map);


  // Add info box layer
  var stationInfoBox = L.control();

  // Add info box for station information
  stationInfoBox.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'station-info'); // create a div with a class "info"
    this.update();
    return this._div;
  };

  // Method that we will use to update the control based on feature properties passed
  stationInfoBox.update = function (props) {
    this._div.innerHTML = '<h4>Station Information</h4>' +  (props ?
      '<p><strong>' + props.name + '</strong><br>' + props.bikes + ' bikes</p><p><strong>Activity</strong><br>' + Number(props.start_trips).toLocaleString('en') + ' pickups<br>' + Number(props.end_trips).toLocaleString('en') + ' dropoffs</p><p><strong>Popular Dropoff Station <i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="top" title="Where people usually dropoff bikes they pickup at this station"></i></strong><br>' + props.popular_dropoff + '</p><p><strong>Popular Pickup Station <i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="top" title="Where people usually pickup bikes they dropoff at this station"></i></strong><br>' + props.popular_pickup + '</p><p class="text-right small"><br><span class="disclaimer"><em>Data from August 29, 2013 to February 28, 2014</em></span></p>'
      : '<p>Click a station for details</p>');
  };


  // Add info box layer
  var citySelectionBox = L.control();

  // Add info box for station information
  citySelectionBox.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'city-selection'); // create a div with a class "info"
    this.update();
    return this._div;
  };

  // Method that we will use to update the control based on feature properties passed
  citySelectionBox.update = function (props) {
    this._div.innerHTML = '<div class="city-selection-button"><div class="btn-group pull-right" id="choose-city"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Change City&nbsp;&nbsp;<span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li class="divider"></li><li><a href="#" data-city="All Cities">All Cities</a></li></ul></div></div>';
  };

  // Add info box layer
  var cityInfoBox = L.control();

  // Add info box for station information
  cityInfoBox.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'city-info'); // create a div with a class "info"
    this.update();
    return this._div;
  };

  // Method that we will use to update the control based on feature properties passed
  cityInfoBox.update = function (props) {
    this._div.innerHTML = (props ? '<h4 class="current-city">' + props.city + '</h4><p>' + props.station_count + ' bike stations</p><p><strong>Popular Pickup Station</strong><br>' + props.popular_pickup + '</p><p><strong>Popular Dropoff Station</strong><br>' + props.popular_dropoff + '</p>' : '<h4>Loading...</h4>');
  };


  // Add info window to map
  cityInfoBox.addTo(map);

  // Add info window to map
  citySelectionBox.addTo(map);

  // Add info window to map
  stationInfoBox.addTo(map);

  // Get City List
  var cityListHTML = '';
  $.getJSON('/stations/index.json').done(function (cities) {
      cities.forEach(function(city) {
        cityListHTML += '<li><a href="#" data-city="' + city + '">' + city + '</a></li>';
      });
      $('#choose-city .dropdown-menu').prepend(cityListHTML);
      $('*[data-city="San Francisco"]').click();
  });

  // Function for each feature
  function onEachFeature(feature,layer) {
    layer.on({
      click: function () {
        stationInfoBox.update(layer.feature.properties);
        // Instantiate tooltips
        $('.glyphicon-info-sign').tooltip();
      }
    })
  }

  // Map layer for station markers
  var stationsLayer = L.geoJson(null, {
    onEachFeature: onEachFeature
  }).addTo(map);


  // Zoom control
  var zoomControl = L.control.zoom({position: 'bottomright'}).addTo(map)


  // Pull station maps based on city selected
  $(document).on('click', '#choose-city li a', function(e){
    // Selected City
    city = $(this).data('city');

    // Clear station info box
    stationInfoBox.update();

    // Only get city station data if we don't already have it
    if (currentCity != city) {
      // Get list of stations
      $.getJSON('/stations/by_city', {
        city: city
      }).done(function(stations) {

          cityInfoBox.update(stations[0]);

          // Clear stationsLayer and add new data.
          stationsLayer.clearLayers().addData(stations);

          // Recent map to fit marker bounds
          map.fitBounds(stationsLayer.getBounds());
      });
    }else{
      map.fitBounds(stationsLayer.getBounds());
    }

    // Set currently selected city
    currentCity = city;

    // Ignore link click
    e.preventDefault();
  });

  // Hide / show city selection box
  var selectionViewTimer;
  $('.city-info').on('mouseover click', function () {
    $('.city-selection-button').slideDown();
    window.clearTimeout(selectionViewTimer);
  }).on('mouseout', function () {
    selectionViewTimer = window.setTimeout(function () {
      $('.city-selection-button').slideUp();      
    }, 1500);
  });

  $('.city-selection').on('mouseover', function () {
    window.clearTimeout(selectionViewTimer);
  }).on('mouseout', function () {
    selectionViewTimer = window.setTimeout(function () {
      $('.city-selection-button').slideUp();      
    }, 1500);
  });

  $('.station-info').on('click', function () {
    stationInfoBox.update();
  })

}

$(document).ready(ready);
$(document).on('page:load', ready);